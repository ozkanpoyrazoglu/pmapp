version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: project_management_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: project_management
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - project_management_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    container_name: project_management_backend
    restart: unless-stopped
    environment:
      MONGODB_URL: mongodb://admin:admin123@mongodb:27017/project_management?authSource=admin
      SECRET_KEY: your-super-secret-key-change-this-in-production
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      DATABASE_NAME: project_management
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - project_management_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React App
  frontend:
    build: ./frontend
    container_name: project_management_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - project_management_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: project_management_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - project_management_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  project_management_network:
    driver: bridge